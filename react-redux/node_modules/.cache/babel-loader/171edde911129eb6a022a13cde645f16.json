{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markm\\\\Dev\\\\react-redux-mern\\\\react-redux\\\\src\\\\components\\\\RecordList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.level\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 6\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 4\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 2\n}, this);\n_c = Record;\nexport default function RecordList() {\n  _s();\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map(record => {\n      //console.log(record)\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: record.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: record.position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: record.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-link\",\n            to: `/edit/${record._id}`,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link\",\n            onClick: () => {\n              deleteRecord(record._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  //console.log(records)\n  // This following section will display the table with the records of individuals.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 4\n  }, this);\n}\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Record","props","record","name","position","level","_id","deleteRecord","RecordList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","recordList","map","marginTop"],"sources":["C:/Users/markm/Dev/react-redux-mern/react-redux/src/components/RecordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nconst Record = (props) => (\r\n <tr>\r\n   <td>{props.record.name}</td>\r\n   <td>{props.record.position}</td>\r\n   <td>{props.record.level}</td>\r\n   <td>\r\n     <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n     <button className=\"btn btn-link\"\r\n       onClick={() => {\r\n         props.deleteRecord(props.record._id);\r\n       }}\r\n     >\r\n       Delete\r\n     </button>\r\n   </td>\r\n </tr>\r\n);\r\n \r\nexport default function RecordList() {\r\n const [records, setRecords] = useState([]);\r\n \r\n // This method fetches the records from the database.\r\n useEffect(() => {\r\n   async function getRecords() {\r\n     const response = await fetch(`http://localhost:5000/record/`);\r\n \r\n     if (!response.ok) {\r\n       const message = `An error occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n \r\n     const records = await response.json();\r\n     setRecords(records);\r\n   }\r\n \r\n   getRecords();\r\n \r\n   return;\r\n }, [records.length]);\r\n \r\n // This method will delete a record\r\n async function deleteRecord(id) {\r\n   await fetch(`http://localhost:5000/${id}`, {\r\n     method: \"DELETE\"\r\n   });\r\n \r\n   const newRecords = records.filter((el) => el._id !== id);\r\n   setRecords(newRecords);\r\n }\r\n \r\n // This method will map out the records on the table\r\n function recordList() {\r\n   return records.map((record) => {\r\n    //console.log(record)\r\n     return (\r\n        <tr>\r\n        <td>{record.name}</td>\r\n        <td>{record.position}</td>\r\n        <td>{record.level}</td>\r\n        <td>\r\n          <Link className=\"btn btn-link\" to={`/edit/${record._id}`}>Edit</Link> |\r\n          <button className=\"btn btn-link\"\r\n            onClick={() => {\r\n              deleteRecord(record._id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n     );\r\n   });\r\n }\r\n //console.log(records)\r\n // This following section will display the table with the records of individuals.\r\n return (\r\n   <div>\r\n     <h3>Record List</h3>\r\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n       <thead>\r\n         <tr>\r\n           <th>Name</th>\r\n           <th>Position</th>\r\n           <th>Level</th>\r\n           <th>Action</th>\r\n         </tr>\r\n       </thead>\r\n       <tbody>{recordList()}</tbody>\r\n     </table>\r\n   </div>\r\n );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}